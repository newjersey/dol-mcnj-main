name: Dependabot Auto-Merge

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' || github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      - name: Check if safe to auto-merge
        id: check-safety
        run: |
          # Get PR title and check for major version updates or critical dependencies
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "Checking PR: $PR_TITLE"
          
          # Check for critical frameworks (be conservative)
          if echo "$PR_TITLE" | grep -iE "\b(next|react|typescript|webpack|babel)\b"; then
            echo "safe=false" >> $GITHUB_OUTPUT  
            echo "reason=critical-dependency" >> $GITHUB_OUTPUT
            echo "Skipping: Critical dependency detected"
          else
            # Extract version numbers and check for major version changes
            if echo "$PR_TITLE" | grep -qE "from ([0-9]+)\.[0-9]+\.[0-9]+ to ([0-9]+)\.[0-9]+\.[0-9]+"; then
              FROM_MAJOR=$(echo "$PR_TITLE" | sed -n 's/.*from \([0-9]\+\)\.[0-9]\+\.[0-9]\+.*/\1/p')
              TO_MAJOR=$(echo "$PR_TITLE" | sed -n 's/.*to \([0-9]\+\)\.[0-9]\+\.[0-9]\+.*/\1/p')
              
              if [ "$FROM_MAJOR" != "$TO_MAJOR" ]; then
                echo "safe=false" >> $GITHUB_OUTPUT
                echo "reason=major-version-change" >> $GITHUB_OUTPUT
                echo "Skipping: Major version change from $FROM_MAJOR.x.x to $TO_MAJOR.x.x"
              else
                echo "safe=true" >> $GITHUB_OUTPUT
                echo "reason=safe-update" >> $GITHUB_OUTPUT
                echo "Safe to auto-merge: patch/minor update within same major version"
              fi
            else
              echo "safe=true" >> $GITHUB_OUTPUT
              echo "reason=safe-update" >> $GITHUB_OUTPUT
              echo "Safe to auto-merge"
            fi
          fi

      - name: Approve and enable auto-merge
        if: steps.check-safety.outputs.safe == 'true'
        run: |
          # Approve the PR
          gh pr review --approve "${{ github.event.pull_request.html_url }}"
          
          # Enable auto-merge - will merge automatically when all required checks pass
          gh pr merge --auto --squash "${{ github.event.pull_request.html_url }}" || true
          
          echo "âœ… Auto-merge enabled. PR will merge automatically when all checks pass."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on skipped PR
        if: steps.check-safety.outputs.safe == 'false'
        run: |
          gh pr comment "${{ github.event.pull_request.html_url }}" --body "ðŸ¤– Auto-merge skipped: ${{ steps.check-safety.outputs.reason }}. Manual review required."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
