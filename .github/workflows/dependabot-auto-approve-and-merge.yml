name: Dependabot Approve and Merge

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-approve-and-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for tests to complete
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'ci/circleci: node-tests'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success
          
      - name: Wait for build to complete  
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'ci/circleci: build-and-feature-tests'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success

      - name: Approve PR
        if: |
          steps.metadata.outputs.update-type != 'version-update:semver-major' &&
          !contains(steps.metadata.outputs.dependency-names, 'next') &&
          !contains(steps.metadata.outputs.dependency-names, 'react')
        run: |
          gh pr review --approve "${{ github.event.pull_request.html_url }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge for safe updates
        if: |
          steps.metadata.outputs.update-type != 'version-update:semver-major' &&
          !contains(steps.metadata.outputs.dependency-names, 'next') &&
          !contains(steps.metadata.outputs.dependency-names, 'react')
        run: |
          gh pr merge --auto --squash "${{ github.event.pull_request.html_url }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
