name: Test E2E (Cypress)

on:
  workflow_call:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20.11.0'
  DB_NAME: d4adlocal

jobs:
  test-e2e:
    name: Cypress Feature Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    env:
      IS_CI: 'true'
      NODE_ENV: test
      DB_ENV: test
      PGHOST: localhost
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: ''
      PGDATABASE: d4adtest
      # Contentful / CMS environment variables
      REACT_APP_SITE_NAME: ${{ secrets.REACT_APP_SITE_NAME }}
      REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
      REACT_APP_SITE_URL: ${{ secrets.REACT_APP_SITE_URL }}
      REACT_APP_BASE_URL: ${{ secrets.REACT_APP_BASE_URL }}
      REACT_APP_SPACE_ID: ${{ secrets.REACT_APP_SPACE_ID }}
      REACT_APP_ENVIRONMENT: ${{ secrets.REACT_APP_ENVIRONMENT }}
      REACT_APP_DELIVERY_API: ${{ secrets.REACT_APP_DELIVERY_API }}
      REACT_APP_PREVIEW_API: ${{ secrets.REACT_APP_PREVIEW_API }}
      # Feature flags
      REACT_APP_FEATURE_CAREER_PATHWAYS: ${{ secrets.REACT_APP_FEATURE_CAREER_PATHWAYS }}
      REACT_APP_FEATURE_MULTILANG: ${{ secrets.REACT_APP_FEATURE_MULTILANG }}
      REACT_APP_FEATURE_PINPOINT: ${{ secrets.REACT_APP_FEATURE_PINPOINT }}
      REACT_APP_FEATURE_CAREER_NAVIGATOR: ${{ secrets.REACT_APP_FEATURE_CAREER_NAVIGATOR }}
      REACT_APP_FEATURE_LP_CAREER_ROW: ${{ secrets.REACT_APP_FEATURE_LP_CAREER_ROW }}
      REACT_APP_FEATURE_MAINTENANCE: ${{ secrets.REACT_APP_FEATURE_MAINTENANCE }}
      REACT_APP_FEATURE_BETA: ${{ secrets.REACT_APP_FEATURE_BETA }}
      REACT_APP_FEATURE_BETA_MESSAGE: ${{ secrets.REACT_APP_FEATURE_BETA_MESSAGE }}
      REACT_APP_FEATURE_SHOW_PINPOINT_SEGMENTS: ${{ secrets.REACT_APP_FEATURE_SHOW_PINPOINT_SEGMENTS }}
      # Google & Other APIs
      REACT_APP_GOOGLE_CLIENTID: ${{ secrets.REACT_APP_GOOGLE_CLIENTID }}
      REACT_APP_GOOGLE_CLIENT_SECRET: ${{ secrets.REACT_APP_GOOGLE_CLIENT_SECRET }}
      REACT_APP_SIGNUP_FOR_UPDATES: ${{ secrets.REACT_APP_SIGNUP_FOR_UPDATES }}
      NEXT_PUBLIC_SURVEY_URL: ${{ secrets.NEXT_PUBLIC_SURVEY_URL }}
      NEXT_PUBLIC_FEATURE_CRC_INFO: ${{ secrets.NEXT_PUBLIC_FEATURE_CRC_INFO }}
      # O*NET Integration
      ONET_BASEURL: ${{ secrets.ONET_BASEURL }}
      ONET_USERNAME: ${{ secrets.ONET_USERNAME }}
      ONET_PASSWORD: ${{ secrets.ONET_PASSWORD }}
      # Credential Engine
      CE_AUTH_TOKEN: ${{ secrets.CE_AUTH_TOKEN }}
      CE_ENVIRONMENT: ${{ secrets.CE_ENVIRONMENT }}
    
    services:
      postgres:
        image: postgres:12.7
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install PostgreSQL client and setup databases
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          
          # Wait for PostgreSQL
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          
          # Create local database
          createdb -h localhost -p 5432 ${{ env.DB_NAME }} -U postgres
          echo "Database ${{ env.DB_NAME }} created"
          
          # Initialize migrations table
          psql -h localhost -p 5432 -U postgres -d ${{ env.DB_NAME }} -c "
            CREATE TABLE IF NOT EXISTS migrations (
              id SERIAL PRIMARY KEY,
              name VARCHAR(255) NOT NULL,
              run_on TIMESTAMP NOT NULL
            );
          "
      
      - name: Install Cypress system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev \
            libnss3 libxss1 libasound2t64 libxtst6 xauth xvfb
      
      - name: Install Node.js dependencies
        run: |
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
          npm config set fetch-retries 5
          npm ci --frozen-lockfile
          npm --prefix=backend ci --frozen-lockfile
      
      - name: Setup test database schema
        run: |
          echo "=== SETTING UP TEST DATABASE ==="
          echo "Using minimal test schema for d4adtest"
          
          # Create d4adtest database (connect to postgres database, not d4adtest)
          PGPASSWORD="" psql -h localhost -U postgres -d postgres -c "CREATE DATABASE d4adtest;"
          
          # Load test schema
          if [ -f backend/test-schema.sql ]; then
            PGPASSWORD="" psql -h localhost -U postgres -d d4adtest -f backend/test-schema.sql
            echo "âœ“ Test schema loaded"
          else
            echo "ERROR: backend/test-schema.sql not found!"
            exit 1
          fi
          
          # Verify tables
          PGPASSWORD="" psql -h localhost -U postgres -d d4adtest -c "\dt" | head -20
      
      - name: Build Next.js application
        run: npm run build:prod
      
      - name: Run Cypress feature tests
        run: |
          # Ensure dummy frontend directory exists for legacy scripts
          mkdir -p frontend
          echo '{"name": "frontend-deprecated"}' > frontend/package.json
          
          # Run feature tests
          DB_ENV=dev scripts/feature-tests.sh | tee feature-test-output.txt
      
      - name: Upload feature test output
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: feature-test-output
          path: feature-test-output.txt
          retention-days: 30
      
      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots/
          retention-days: 30
      
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos/
          retention-days: 30
