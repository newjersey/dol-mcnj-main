version: 2.1
jobs:
  build-and-test:
    docker:
      - image: cimg/node:16.17-browsers
      - image: circleci/postgres:12
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD:
    steps:
      - checkout
      - run:
          name: Print / directory structure
          command: ls /
      - run:
          name: Print home directory structure recursive
          command: ls -R /home
      - run:
          name: Setup postgres
          command: |
            sudo apt-get update
            sudo apt-get install postgresql-client
            createdb -h localhost d4adlocal -U postgres
      - run:
          name: Install cypress dependencies
          command: sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      - restore_cache:
          keys:
            - node-deps-v3-{{ .Branch }}-{{ checksum "package.json" }}
            - node-deps-v3-{{ .Branch }}
            - node-deps-v3
      - run:
          command: npm install
      - run:
          command: npm test
      - run:
          name: Run feature tests
          command: |
            scripts/feature-tests.sh > feature-test-output.txt
      - store_artifacts:
          path: feature-test-output.txt
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
      - run:
          name: Print / directory structure
          command: ls /
      - run:
          name: Print home directory structure recursive
          command: ls -R /home
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: install and initialize gcloud sdk
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run:
          name: deploy
          command: DB_PASS=$DB_DEV_PASS DB_NAME=d4addev DB_ENV=gcpdev CLOUD_SQL_CONNECTION_NAME=d4ad-dev:us-east4:d4ad-dev-gcp-pg scripts/deploy.sh
  deploy-prod:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: install and initialize gcloud sdk
          command: |
            echo $GCLOUD_SERVICE_KEY_PROD | base64 --decode | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID_PROD}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run:
          name: deploy
          command: DB_PASS=$DB_PROD_PASS DB_NAME=d4adprod DB_ENV=gcpprod CLOUD_SQL_CONNECTION_NAME=d4ad-prod:us-east4:d4ad-prod-gcp-pg scripts/deploy.sh
workflows:
  build-test-deploy:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only: master
      - prod-approval:
          type: approval
          requires:
            - deploy
          filters:
            branches:
              only: master
      - deploy-prod:
          requires:
            - prod-approval
          filters:
            branches:
              only: master
  version: 2.1
