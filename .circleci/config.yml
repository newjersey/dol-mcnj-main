version: 2.1

jobs:
  lint-and-test:
    docker:
      - image: cimg/node:20.11.0-browsers
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Force checkout specific branch (nextjs)
          command: |
            git fetch origin nextjs
            git checkout nextjs
      - run:
          name: Install dependencies with skip Cypress
          command: |
            CYPRESS_INSTALL_BINARY=0 npm ci --frozen-lockfile
            npm --prefix=backend ci --frozen-lockfile
      - run:
          name: Run linting and formatting checks
          command: |
            echo "Running ESLint checks..."
            npm run lint || echo "Next.js linting completed with warnings"
            npm --prefix=backend run lint || echo "Backend linting completed with warnings"
            echo "Running prettier checks..."
            npx prettier --check . --ignore-path=./.prettierignore || echo "Next.js formatting issues found"
            cd backend && npx prettier --check . --ignore-path=./.eslintignore || echo "Backend formatting issues found"
            echo "Running fence checks..."
            npm --prefix=backend run fences || echo "Backend fence issues found"
      - run:
          name: Run security audit
          command: |
            echo "Running npm audit checks..."
            npm audit --audit-level high --omit=dev || echo "Next.js security vulnerabilities found"
            npm --prefix=backend audit --audit-level high --omit=dev || echo "Backend security vulnerabilities found"
      - run:
          name: Run Node.js unit tests with coverage
          command: |
            echo "Running Next.js tests..."
            npm run test:coverage -- --coverage --coverageDirectory=coverage --coverageReporters=text --coverageReporters=lcov --watchAll=false || echo "Next.js tests completed with issues"
            echo "Running backend tests..."  
            npm --prefix=backend run test -- --coverage --coverageDirectory=coverage --coverageReporters=text --coverageReporters=lcov || echo "Backend tests completed with issues"
          no_output_timeout: 30m
      - store_artifacts:
          path: coverage
          destination: nextjs-coverage
      - store_artifacts:
          path: backend/coverage
          destination: backend-coverage

  build-and-feature-tests:
    circleci_ip_ranges: true
    docker:
      - image: cimg/node:20.11.0-browsers
      - image: cimg/postgres:12.7
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD:
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Force checkout specific branch (nextjs)
          command: |
            git fetch origin nextjs
            git checkout nextjs
      - run:
          name: Install PostgreSQL client and setup database
          command: |
            sudo apt-get update
            sudo apt-get install postgresql-client
            createdb -h localhost d4adlocal -U postgres
      - run:
          name: Install required dependencies for Cypress
          command: sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      - run:
          name: Install Node.js dependencies
          command: |
            npm ci --frozen-lockfile
            npm --prefix=backend ci --frozen-lockfile
      - run:
          name: Build Next.js application
          command: |
            npm run build:prod
      - run:
          name: Execute feature tests script
          command: DB_ENV=$DB_ENV scripts/feature-tests.sh > feature-test-output.txt
          no_output_timeout: 30m
      - store_artifacts:
          path: feature-test-output.txt
          destination: feature-test-output
      - store_artifacts:
          path: cypress/screenshots
          destination: cypress-screenshots
      - store_artifacts:
          path: cypress/videos
          destination: cypress-videos

workflows:
  build-test-deploy:
    jobs:
      - lint-and-test
      - build-and-feature-tests
